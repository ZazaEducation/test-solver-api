[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-test-solver"
version = "0.1.0"
description = "AI-powered test solving API with OCR, RAG, and concurrent processing"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "AI Test Solver Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "supabase>=2.2.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    "httpx>=0.25.0",
    "python-multipart>=0.0.6",
    "pillow>=10.1.0",
    "pdf2image>=1.17.0",
    "google-cloud-vision>=3.4.5",
    "google-cloud-storage>=2.10.0",
    "openai>=1.6.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "sentence-transformers>=2.2.0",
    "tiktoken>=0.5.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "asyncio-throttle>=1.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/ai-test-solver/api"
Repository = "https://github.com/ai-test-solver/api.git"
Issues = "https://github.com/ai-test-solver/api/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/ai_test_solver"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"